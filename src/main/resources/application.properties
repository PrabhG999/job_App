# Database Connection
pring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:file:~/test;IFEXISTS=FALSE
#Database login and passowrd
spring.datasource.username=sa
spring.datasource.password=



#This property tells Spring Boot to print the SQL statements generated by Hibernate to the console. This is very useful for debugging purposes because you can see exactly what SQL queries are being executed against the database during the operation of your application.
spring.jpa.show-sql=true

# update : This property is used to control the behavior of DDL (Data Definition Language) generation. DDL is the set of SQL commands that are used to define the structure of the database (like CREATE TABLE, ALTER TABLE, DROP TABLE commands). When you set ddl-auto to update,
# Hibernate will automatically update the database schema at startup to match the entity mappings you've provided in your application. It will not remove any existing data or tables but will try to alter the tables to match your entities.
# This is useful in a development environment because it allows your database schema to evolve as your code changes without having to manually alter the database or use a separate database migration tool. Other common values for this property are:
#create: Creates the database schema every time the application starts, destroying previous data.
#create-drop: Creates the database schema when the application starts and drops it when the application stops.
#validate: Validates the schema, makes no changes to the database.
#none: Disables automatic schema generation.
spring.jpa.hibernate.ddl-auto=create-drop
